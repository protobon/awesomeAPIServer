version: '3.9'
services:
  app:
    container_name: awesome_api_test
    stop_signal: SIGINT
    stop_grace_period: 10s
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${TEST_DB_USER}
      - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - POSTGRES_DB=${TEST_DB_NAME}
      - DATABASE_HOST=${TEST_DB_HOST}
      - DATABASE_PORT=${TEST_DB_PORT}
      - APPLICATION_PORT=${TEST_APP_PORT}
    tty: true
    build: .
    expose:
      - "8080"
    ports:
      - 8080:8080
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - awesome_api_db_test
    networks:
      - awesome_api_network_test

  awesome_api_db_test:
    image: postgres:latest
    container_name: awesome_api_db_test
    stop_signal: SIGINT
    stop_grace_period: 10s
    environment:
      - POSTGRES_USER=${TEST_DB_USER}
      - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - POSTGRES_DB=${TEST_DB_NAME}
      - DATABASE_HOST=${TEST_DB_HOST}
    ports:
      - '2345:5432'
    volumes:
      - data_test:/var/lib/postgresql/data
    networks:
      - awesome_api_network_test

volumes:
  data_test:
  app:

# Networks to be created to facilitate communication between containers
networks:
  awesome_api_network_test:
    driver: bridge